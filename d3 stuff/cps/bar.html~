<!DOCTYPE html>
<html>
  <head>
    <title>Bar Chart</title>
    <script type="text/javascript" src="../d3.js"></script>
    <script type="text/javascript" src="../d3.csv.js"></script>
    <style type="text/css">

body {
  font: 10px sans-serif;
}

svg {
  shape-rendering: crispEdges;
}

    </style>
  </head>
  <body>
<div id="chart">
    <script type="text/javascript">

var schoolColors = [{"School":"CMC", "Color":"Maroon"}, 
                    {"School":"Scripps", "Color":"DarkGreen"}, 
                    {"School":"Pitzer", "Color":"DarkOrange"}, 
                    {"School":"Pomona", "Color":"Blue"}, 
                    {"School":"HMC", "Color":"Goldenrod"}];

    var schoolColorDict = {};
    for (i in schoolColors){
        schoolColorDict[schoolColors[i]["School"]] = schoolColors[i]["Color"];
    }

//var data = d3.range(10).map(Math.random);
d3.csv("a.csv", function(csv){
    var data = csv.filter(function(d, i){ return d["Position"] == "Faculty";});
    data = data.sort(function(d1, d2){ return d2.Base - d1.Base});
    data.forEach(function(x) {
    });
    drawGraph( data);
});


//lets graph faculty salaries with diff colors per school

function schoolColor(school){
    if (school in schoolColorDict){
        return schoolColorDict[school];
    }else{
        return "Black"
    }
}


function drawGraph(data){
    var w = 550,
        h = 460,
        x = d3.scale.linear().domain([0, 350000]).range([0, w]),
        y = d3.scale.ordinal().domain(d3.range(data.length)).rangeBands([0, h], .2);

    var vis = d3.select("#chart")
      .append("svg:svg")
        .attr("width", w + 40)
        .attr("height", h + 20)
      .append("svg:g")
        .attr("transform", "translate(100,0)");

    /* Base comp bars */
    var bars = vis.selectAll("g.bar")
        .data(data.map(function(d,i){ return d.Base; }))
      .enter().append("svg:g")
        .attr("class", "bar")
        .attr("transform", function(d, i) { return "translate(0," + y(i) + ")"; });

    bars.append("svg:rect") // the bars themselves
        .attr("fill", function(d,i){return schoolColor(data[i].College);})
        .attr("width", x)
        .attr("height", y.rangeBand());

    bars.append("svg:text") // Numbers on bars.
        .attr("x", x)
        .attr("y", y.rangeBand() / 2)
        .attr("dx", -6)
        .attr("dy", ".35em")
        .attr("fill", "white")
        .attr("text-anchor", "end")
        .text(x.tickFormat(100));

    bars.append("svg:text") //left of bar labels
        .attr("x", 0)
        .attr("y", y.rangeBand() / 2)
        .attr("dx", -6)
        .attr("dy", ".35em")
        .attr("text-anchor", "end")
        .text( function(d, i) { return data[i].Person; } ); // this sets the name left of the bars.

    var rules = vis.selectAll("g.rule") //scale
        .data(x.ticks(10))
      .enter().append("svg:g")
        .attr("class", "rule")
        .attr("transform", function(d) { return "translate(" + x(d) + ",0)"; });

    rules.append("svg:line") //ticks
        .attr("y1", h)
        .attr("y2", h + 6)
        .attr("stroke", "black");

    rules.append("svg:line") // visual white line things
        .attr("y1", 0)
        .attr("y2", h)
        .attr("stroke", "white")
        .attr("stroke-opacity", .3);

    rules.append("svg:text") //tick labels.
        .attr("y", h + 9)
        .attr("dy", ".71em")
        .attr("text-anchor", "middle")
        .text(x.tickFormat(10));

    vis.append("svg:line") // line between A-J and hte bars.
        .attr("y1", 0)
        .attr("y2", h)
        .attr("stroke", "black");

    legendx = .7 * w;
    legendy = .5 * h;
    var legends = vis.selectAll("g.legend")
        .attr("x", legendx)
        .attr("y", legendy)
        .attr("text-anchor", "end")
        .data(schoolColors)
        .enter()
        .append("svg:g");
    legends.append("svg:rect")
            .attr("x", legendx)
            .attr("y", function(datum, index) { return legendy + index * 25 })
            .attr("height", 20)
            .attr("width", 20)
            .attr("fill", function(datum){ return datum["Color"]; } )
    legends.append("svg:text")
        .attr("x", legendx + 25)
        .attr("y", function(datum, index) { return legendy + index * 25 })
        .attr("dy", "12px")
        .attr("text-anchor", "left")
        .text(function(datum){ return datum["School"]; } );

}
function transitionGroup() {
   var group = d3.selectAll("#chart");
 
   /*group.select("g.bars")
       .attr("class", "first active");
 
   group.select("g.barsTotal")
       .attr("class", "last");*/
   var m = 25; 

   group.selectAll("g.bar rect")
     .transition()
       .duration(500)
       .delay(function(d, i) { return (i % m) * 10; })
       .attr("x", function(d, i) { return x({x: .9 * ~~(i / m) / n}); })
       .each("end", transitionEnd);
 
   function transitionEnd() {
     d3.select(this)
        .transition()
        .duration(500)
        .attr("y", function(d) { return h - y2(d); })
        .attr("height", y2);
  }
}


    </script>
    </div>
  </body>
</html>
